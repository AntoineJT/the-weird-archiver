use std::fs::File;
use std::io::{BufReader, Read};
use std::process::Command;

fn main() {
    let mut files = Vec::new();
    files.push(".gitignore");
    generate_batch(files);
}

fn read_whole_file(filename: &str) -> Vec<u8> {
    let mut input = File::open(filename)
        .expect(format!("No {} file found!", filename).as_str());
    let mut buffer: Vec<u8> = Vec::new();
    input.read_to_end(&mut buffer);
    buffer
}

fn generate_batch(files: Vec<&str>) {
    let mut batch = String::new();
    batch.push_str("@echo off
rem This file has been generated by the-weird-archiver: https://github.com/AntoineJT/the-weird-archiver\n");
    for file in files {
        let input = read_whole_file(file);
        let hex = hex::encode(input);
        let write_hex = batch_echo_cmd(file, hex, "hex");
        let write_b64 = format!("certutil -decodehex {}.hex {}.b64", file, file);
        // TODO Continue, improve variable naming
    }
}

fn batch_echo_cmd(filename: &str, content: String, ext: &str) -> String {
    format!("echo {} > {}.{}", content, filename, ext)
}
